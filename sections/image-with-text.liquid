{% style %}
  @media(min-width: 768px) {
    .section-id-{{ section.id }} .image-with-text__image__inner {
      {% if section.settings.media_size == "cover" %}
        transform: scale({{ section.settings.image_width | times: 0.01 }});
      {% elsif section.settings.media_size == "contain" %}
        height: auto !important;
        width: {{ section.settings.image_width }}% !important;
      {% endif %}
    }

    .section-id-{{ section.id }} .image-with-text__text {
      flex-basis: {{ section.settings.text_width }}%;
    }

    .section-id-{{ section.id }} .image-with-text__image__inner .rimage-outer-wrapper {
      background-size: {{ section.settings.media_size }};
    }
  }
{% endstyle %}

{% capture image_html %}
  <div class="image-with-text__image" data-cc-animate>
    <div class="image-with-text__image__inner lazyload--placeholder">
      {%- if section.settings.image == blank and section.settings.video == blank -%}
        <div class="placeholder-image">{{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}</div>
      {%- elsif section.settings.video == blank -%}
        {% assign img_url = section.settings.image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
        <div class="rimage-outer-wrapper"
            data-cc-animate="cc-zoom-out"
            data-lazy-bg="{{ img_url }}"
            style="max-width: {{ section.settings.image.width }}px; max-height: {{ section.settings.image.height }}px">
          <div class="rimage-wrapper" style="padding-top:{{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%">
            <noscript>
              <img src="{{ section.settings.image | img_url: '1024x1024' }}" alt="{{ section.settings.image.alt | escape }}" class="rimage__image">
            </noscript>
          </div>
        </div>
      {%- else -%}
        {% render 'inline-video', video: section.settings.video, image: section.settings.image %}
      {% endif %}
    </div>
  </div>
{% endcapture %}

<section class="border-top section image-with-text cf
  section-id-{{ section.id }}
  {% if section.settings.alternate_bg_color %}use-alt-bg full-width-section{% endif %}
  {% if section.settings.image_width < 100 and section.settings.media_size == "contain" %}section-spacing-sm{% endif %}
  image-with-text--{{ section.settings.media_size }}
  image-with-text--image-{{ section.settings.image_position }}
" data-section-type="image-with-text">

  <div class="container">
    {% if section.settings.image_position == 'left' %}{{ image_html }}{% endif %}

    <div class="image-with-text__text align-{{ section.settings.text_alignment }}" data-cc-animate data-cc-animate-delay="0.2s">
      <div class="image-with-text__text__wrap
          {% if section.settings.media_size == "contain" %}padded-block-y{% else %}padded-block{% endif %}
        ">

        {% if section.settings.subheading != blank %}
          <div class="feature-subheader" data-cc-animate data-cc-animate-delay="0.2s">{{ section.settings.subheading | escape }}</div>
        {% endif %}

        {% if section.settings.title != blank %}
          <h2 class="h1 align-{{ section.settings.text_alignment }}" data-cc-animate data-cc-animate-delay="0.3s">
            {{ section.settings.title | newline_to_br }}
          </h2>
        {% endif %}

        <div class="rte align-{{ section.settings.text_alignment }}" data-cc-animate data-cc-animate-delay="0.4s">{{ section.settings.text }}</div>
        {% if section.settings.button_label != blank %}

        <div class="light-space-above" data-cc-animate data-cc-animate-delay="0.5s">
          {% if section.settings.button_link != blank %}
            <a class="
              {% if section.settings.button_style == 'link' %}link-display {% else %}btn {% if section.settings.button_style == 'secondary' %}btn--secondary{% endif %}{% endif %}"
               href="{{ section.settings.button_link }}">
          {% else %}
            <span class="
              {% if section.settings.button_style == 'link' %}link-display {% else %}btn {% if section.settings.button_style == 'secondary' %}btn--secondary{% endif %}{% endif %}">
          {% endif %}

            {{ section.settings.button_label | escape }}

          {% if section.settings.button_link == blank %}
            </span>
          {% else %}
            </a>
          {% endif %}
        </div>

        {% endif %}
      </div>
    </div>

    {% if section.settings.image_position == 'right' %}{{ image_html }}{% endif %}
  </div>
</section>


{% schema %}
  {
    "name": "Media with text",
    "class": "section-image-with-text",
    "settings": [
      {
        "type": "header",
        "content": "Text"
      },
      {
        "type": "text",
        "id": "subheading",
        "label": "Subheading"
      },
      {
        "type": "textarea",
        "id": "title",
        "label": "Heading",
        "default": "هذا النص هو مثال لنص"
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text",
        "default": "<p>هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص.</p>"
      },
      {
        "type": "text",
        "id": "button_label",
        "label": "Button"
      },
      {
        "type": "url",
        "id": "button_link",
        "label": "Button link"
      },
      {
        "type": "select",
        "id": "button_style",
        "label": "Button style",
        "default": "primary",
        "options": [
          {
            "label": "Button - primary",
            "value": "primary"
          },
          {
            "label": "Button - secondary",
            "value": "secondary"
          },
          {
            "label": "Link",
            "value": "link"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "Text alignment",
        "default": "center",
        "options": [
          {
            "label": "Left",
            "value": "left"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Right",
            "value": "right"
          }
        ]
      },
      {
        "type": "range",
        "id": "text_width",
        "min": 40,
        "max": 70,
        "step": 1,
        "unit": "%",
        "label": "Text width",
        "default": 40
      },
      {
        "type": "header",
        "content": "Media"
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
      {
        "id": "video",
        "type": "text",
        "label": "Video URL",
        "info": "A URL to an MP4 video. It's recommended to pick an image also as it will be shown while the video loads."
      },
      {
        "type": "range",
        "id": "image_width",
        "min": 40,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Media scale",
        "default": 100
      },
      {
        "type": "select",
        "id": "image_position",
        "label": "Media position",
        "default": "right",
        "options": [
          {
            "value": "right",
            "label": "Right"
          },
          {
            "value": "left",
            "label": "Left"
          }
        ]
      },
      {
        "type": "select",
        "id": "media_size",
        "label": "Media size",
        "options": [
          {
            "value": "cover",
            "label": "Fill"
          },
          {
            "value": "contain",
            "label": "Natural"
          }
        ],
        "default": "cover"
      },
      {
        "type": "header",
        "content": "Style"
      },
      {
        "type": "checkbox",
        "id": "alternate_bg_color",
        "label": "Use alternate section color",
        "default": false
      }
    ],
    "presets": [
	    {
        "name": "Media with text",
        "category": "Image",
        "settings": {}
      }
    ]
  }
{% endschema %}
