{%- liquid
  if collection.url.size == 0
    assign collection_url = routes.all_products_collection_url
  else
    assign collection_url = collection.url
  endif

  if collection_url contains "?"
    assign collection_url = collection_url | split: "?" | first
  endif

  assign current_sort_by = collection.sort_by | default: collection.default_sort_by
-%}

{%- if section.settings.height == "fixed" -%}
  {%- style -%}
    {%- if section.settings.height == 'fixed' -%}
      {% if section.settings.header_mode == blank %}
        .collection-header .rimage-outer-wrapper,
        .collection-header .placeholder-image {
          height: {{ section.settings.height_mobile }}px;
        }
      {% elsif section.settings.header_mode == 'coloured-split' %}
        .collection-header .header-text,
        .collection-header .header-image {
          min-height: {{ section.settings.height_mobile }}px;
        }
      {%- endif -%}
    {%- endif -%}

    @media (min-width: 768px) {
      {%- if section.settings.height == 'fixed' -%}
        {% if section.settings.header_mode == blank %}
          .collection-header .rimage-outer-wrapper,
          .collection-header .placeholder-image {
          height: {{ section.settings.height_desktop }}px;
          }
        {% elsif section.settings.header_mode == 'coloured-split' %}
          .collection-header .header-text,
          .collection-header .header-image {
          min-height: {{ section.settings.height_desktop }}px;
          }
        {%- endif -%}
      {%- endif -%}
    }
  {%- endstyle -%}
{%- endif -%}

{%- if section.settings.collection_filters_sticky -%}
  {%- style -%}
		.section-header {
			 position: static;
		}
  {%- endstyle -%}
{%- endif -%}

<div class="section collection-page" data-section-type="collection-template"
     data-collection-url="{{ collection_url }}"
     data-components="price-range,accordion"
     data-use-infinite-scroll="{{ section.settings.coll_infiniscroll }}"
     data-is-sticky="{{ section.settings.collection_filters_sticky }}"
     data-ajax-filtering="{{ section.settings.ajax_products }}"
     {% if section.settings.filter_mode == "sidebar" %}data-is-sidebar="true"{% endif %}>

  {% paginate collection.products by section.settings.pagination_limit_int %}
    <div class="container">
      {% capture collection_header %}
        {%- if section.settings.header_mode == blank and collection.featured_image and section.settings.header_mode != "hidden" -%}
          <div class="collection-header cc-banner height--{{ section.settings.height }} {% if section.settings.image_overlay_style != "none" %}has-tint has-tint--{{ section.settings.image_overlay_style }}{% else %}no-tint{% endif %}" data-cc-animate>
						{% assign img_url = collection.featured_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
						<div class="rimage-outer-wrapper rimage-background" data-lazy-bg="{{ img_url }}">
              {%- if section.settings.height == 'natural' -%}
                <div class="rimage-wrapper" style="padding-top:{{ 1 | divided_by: collection.featured_image.aspect_ratio | times: 100 }}%"></div>
              {%- endif -%}
              <noscript>
                <div class="rimage-wrapper" style="padding-top:{{ 1 | divided_by: collection.featured_image.aspect_ratio | times: 100 }}%">
                  <img src="{{ collection.featured_image | img_url: '1024x1024' }}" alt="{{ collection.featured_image.alt | escape }}" class="rimage__image">
                </div>
              </noscript>
            </div>

            {%- if collection.title != blank or collection.description != blank -%}
              <div class="image-overlay overlay--v-{{ section.settings.text_alignment | split: ' ' | first }} overlay--h-{{ section.settings.text_alignment | split: ' ' | last }} ">
                <div class="inner {% if section.settings.text_alignment contains "left" or  section.settings.text_alignment contains "right" %}container{% endif %}">
                  {%- if collection.title != blank -%}
                    <h1 class="line-1  line-1--large" data-cc-animate data-cc-animate-delay="0.3s">
                      {{ collection.title }}
                    </h1>
                  {%- endif -%}

                  {%- if collection.description != blank -%}
                    <div class="rte line-2"  data-cc-animate data-cc-animate-delay="0.4s">
                      {{ collection.description }}
                    </div>
                  {%- endif -%}
                </div>
              </div>
            {%- endif -%}
          </div>
        {%- elsif section.settings.header_mode != "hidden"  -%}
          <div class="collection-header
            {{ section.settings.header_mode }}
            {% if section.settings.height == "fixed" %}collection-header--fixed-height{% endif %} {% if collection.featured_image %}has-image{% endif %} handle-{{ collection.handle }}" data-cc-animate>
            <div class="header-text
              overlay--v-{{ section.settings.text_alignment | split: ' ' | first }}
              overlay--h-{{ section.settings.text_alignment | split: ' ' | last }}">
              <h1 class="page-title">{{ collection.title }}</h1>

              {% if collection.description != blank %}
                <div class="rte">{{ collection.description }}</div>
              {% endif %}
            </div>

            {% if section.settings.header_mode == "coloured-split" and collection.featured_image %}
              <div class="header-image">
                {%- if collection.featured_image -%}
                  {% if section.settings.height == "fixed" %}
										{% assign img_url = collection.featured_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
										<div class="rimage-outer-wrapper rimage-background" data-lazy-bg="{{ img_url }}">
                      <noscript>
                        <div class="rimage-wrapper" style="padding-top:{{ 1 | divided_by: collection.featured_image.aspect_ratio | times: 100 }}%">
                          <img src="{{ collection.featured_image | img_url: '1024x1024' }}" alt="{{ collection.featured_image.alt | escape }}" class="rimage__image">
                        </div>
                      </noscript>
                    </div>
                  {%- else -%}
                    {%- render 'responsive-image', image: collection.featured_image -%}
                  {%- endif -%}
                {%- endif -%}
              </div>
            {% endif %}
          </div>
        {%- endif -%}
      {% endcapture %}

      {% if section.settings.breadcrumb_align == "above_heading" %}
        <div class="collection-breadcrumb collection-breadcrumb--above inline-row cf no-margin-top" data-cc-animate>
          {% render 'breadcrumbs' %}
        </div>
      {% endif %}

      {{ collection_header }}

      {% if section.settings.breadcrumb_align == "below_heading" %}
        <div class="collection-breadcrumb inline-row cf collection-breadcrumb--below" data-cc-animate>
          {% render 'breadcrumbs' %}
        </div>
      {% endif %}

      <div id="collection" data-cc-animate data-ajax-scroll-to>
				{% capture sort_by %}
					{% if section.settings.enable_sorting %}
						<span class="filter">
							<label for="sort-by">{{ 'collections.sorting.title' | t }}:</label>
							<select id="sort-by" name="sort_by" class="sort-by" data-default-value="{{ collection.sort_by | default: collection.default_sort_by  }}">
								{%- for option in collection.sort_options -%}
									{%- if option.value == "manual" and section.settings.collection_sort_show_featured -%}
										<option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
								{{ option.name | escape }}
							</option>
									{%- elsif option.value != "manual" -%}
										<option value="{{ option.value | escape }}"{% if option.value == sort_by or option.value == current_sort_by %} selected="selected"{% endif %}>
								{{ option.name | escape }}
							</option>
									{%- endif -%}
								{%- endfor -%}
							</select>
						</span>
					{% endif %}
				{% endcapture %}

				{%- unless section.settings.filter_mode == "none" and section.settings.enable_sorting == false -%}
					<form id="CollectionFilterFormTopBar" data-collection-form>
						{%- comment -%}Preserve automatic vendor/type collections & sorting{%- endcomment -%}
						{%- if collection.current_vendor or collection.current_type -%}
							<input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
						{%- endif -%}

						{%- if section.settings.enable_sorting == false -%}
							<input type="hidden" name="sort_by" value="{{ current_sort }}">
						{%- endif -%}

						<div class="product-list-toolbar {% if section.settings.collection_filters_sticky %}product-list-toolbar--sticky{% endif %}"
								 data-cc-animate data-cc-animate-delay="0.2s">
							<div class="cc-toolbar-buttons cc-toolbar-buttons--filters">
								{% if section.settings.filter_mode == "sidebar" %}
									<a href="#" class="cc-toolbar-filter-toggle">
										{% render 'svg-filter.liquid' %}
										{{ 'collections.filtering.filter' | t }}
										<span class="filter-count"></span>
									</a>
								{% endif %}

								{% comment %}<span class="results-count desktop">{{ 'collections.general.results' | t: count: collection.products_count }}</span>{% endcomment %}

								{% if section.settings.filter_mode == "simple" %}
									{%- for filter in collection.filters -%}
										{%- case filter.type -%}
											{%- when "list" -%}
												<span class="tags filter">
													<label for="filter-by-{{ filter.label | handleize }}">{{ filter.label }}:</label>
													<select id="filter-by-{{ filter.label | handleize }}"
																	name="{{ filter.values.first.param_name }}">
														<option value="">{{ 'collections.filtering.all' | t }}</option>
														{%- for value in filter.values -%}
															<option value="{{ value.value | escape }}"
																			{% if value.active %}selected{% endif %} {% if value.count == 0 and value.active == false %}disabled{% endif %}>
																{{ value.label }}{% if section.settings.show_filter_counts %} ({{ value.count }}){% endif %}
															</option>
														{%- endfor -%}
													</select>
												</span>
											{%- when "price_range" -%}
												{% comment %}{% render 'price-range', filter: filter %}{% endcomment %}

										{%- endcase -%}
									{%- endfor -%}

									<span class="sort-by-mobile-only">
										{{ sort_by }}
									</span>
								{% else %}
									{%- for filter in collection.filters -%}
										{%- case filter.type -%}
											{%- when "list" -%}
												{%- for value in filter.values -%}
													{%- if value.active -%}
														<input type="hidden" name="{{ value.param_name }}" value="{{ value.value | escape }}"/>
													{%- endif -%}
												{%- endfor -%}

											{%- when "price_range" -%}
												{%- liquid
													assign currencies_using_comma_decimals = "ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND" | split: ','
													assign uses_comma_decimals = false
													if currencies_using_comma_decimals contains cart.currency.iso_code
														assign uses_comma_decimals = true
													endif
												-%}

												<input type="hidden" name="{{ filter.min_value.param_name }}"
													{%- if filter.min_value.value -%}
														{%- if uses_comma_decimals -%}
															value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
														{%- else -%}
															value="{{ filter.min_value.value | money_without_currency | replace: ',', '' | round }}"
														{%- endif -%}
													{%- endif -%}
												/>

												<input type="hidden" name="{{ filter.max_value.param_name }}"
													{%- if filter.max_value.value -%}
														{%- if uses_comma_decimals -%}
															value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' | round }}"
														{%- else -%}
															value="{{ filter.max_value.value | money_without_currency | replace: ',', '' | round }}"
														{%- endif -%}
													{%- endif -%}
												/>
										{%- endcase -%}
									{%- endfor -%}
								{% endif %}
							</div>

							<div class="cc-toolbar-buttons {% if section.settings.filter_mode == "simple" %}desktop-only{% endif %}">
								{{ sort_by }}

								<noscript>
									<span class="filter">
										<button type="submit" class="btn">{{ 'collections.filtering.submit' | t }}</button>
									</span>
								</noscript>
							</div>
						</div>
					</form>
				{% endunless %}

				<div class="{% if section.settings.filter_mode == "sidebar" %}cc-product-filter-container{% endif %}"
						 data-ajax-container>
					{% if section.settings.filter_mode == "sidebar" %}
						<div class="cc-product-filter__mob-veil"></div>

						<form id="CollectionFilterFormSideBar" data-collection-form class="cc-product-filter {% if section.settings.collection_filters_sticky %}cc-product-filter--sticky{% endif %}">
							{%- comment -%}Preserve automatic vendor/type collections & sorting{%- endcomment -%}
							{%- if collection.current_vendor or collection.current_type -%}
								<input type="hidden" name="q" value="{{ collection.current_vendor }}{{ collection.current_type }}">
							{%- endif -%}

							<input type="hidden" name="sort_by" value="{{ current_sort_by }}">

							<h2 class="cc-product-filter__mob_title">{{ 'collections.filtering.filter' | t }}</h2>
							<button type="button" class="cc-product-filter__close"
											aria-label="{{ 'general.accessibility_labels.close' | t | escape }}">
								{% render 'popup-close' %}
							</button>

							{%- for filter in collection.filters -%}
								{%- liquid

									if section.settings.collapse_filters_method == 'all'
										assign filter_is_open = false
									elsif section.settings.collapse_filters_method == 'none'
										assign filter_is_open = true
									elsif section.settings.collapse_filters_method contains 'over-'
										assign limit = section.settings.collapse_filters_method | split: '-' | last | plus: 0
										if filter.values.size > limit
											assign filter_is_open = false
										else
											assign filter_is_open = true
										endif
									endif

									assign filter_title = filter.label | escape
								-%}

								{%- capture filter_content -%}
									{%- case filter.type -%}
										{%- when "list" -%}
											{%- for value in filter.values -%}
												<label class="cc-checkbox {% if value.count == 0 and value.active == false %}cc-checkbox--disabled{% endif %}">
													<input class="cc-checkbox__input"
																 id="Filter-{{ value.param_name }}-{{ value.value | handle }}"
																 type="checkbox"
																 name="{{ value.param_name }}"
																 value="{{ value.value | escape }}"
																 {% if value.active %}checked{% endif %}
														{% if value.count == 0 and value.active == false %}disabled{% endif %}>

													<span class="cc-checkbox__label">{{ value.label | escape }}</span>

													{% if section.settings.show_filter_counts %}
														<span class="cc-checkbox__count">{{ value.count }}</span>
													{% endif %}
												</label>
											{%- endfor -%}

										{%- when "price_range" -%}
											{% render 'price-range', filter: filter %}

									{%- endcase -%}
								{%- endcapture -%}

								{%- render "accordion", first_item_open: filter_is_open, item1_title: filter_title, item1_content: filter_content -%}
							{%- endfor -%}

							<noscript>
								<br/>
								<button type="submit" class="btn">{{ 'collections.filtering.submit' | t }}</button>
							</noscript>

							<footer class="cc-product-filter__footer">
								<a href="{{ collection_url }}" type="button" class="button alt">
									{{ 'collections.filtering.clear_all' | t }}
								</a>
							</footer>
						</form>
					{% endif %}

					<div class="product-list-container product-list-container--{{ section.settings.filter_mode }}
						{% if section.settings.filter_mode == "none" and section.settings.enable_sorting == false %}no-filters{% endif %}"
							 data-cc-animate data-cc-animate-delay="0.2s">

						{% capture active_filters_html %}
							<div class="active-filter-controls-container">
								<ul class="active-filter-controls">
									<li class="active-filter-controls__clear-left">
										<a href="{{ collection.url }}" class="active-filter-controls__clear">
											{{ 'collections.filtering.clear_all' | t }}
										</a>
									</li>

									{%- for filter in collection.filters -%}
										{%- for value in filter.active_values -%}
											<li>
												<a href="{{ value.url_to_remove }}" class="active-filter-controls__tag"
													 data-active-tag="{{ value | escape }}">
													{{ value.label | escape }}
												</a>
											</li>
										{%- endfor -%}

										{% if filter.type == "price_range" %}
											{%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
												<li>
													<a href="{{ filter.url_to_remove }}" class="active-filter-controls__tag"
														 data-active-tag="{{ filter | escape }}">
														{%- if filter.min_value.value %}{{ filter.min_value.value | money }}{%- else -%}{{ 0 | money }}{%- endif -%}
														-{%- if filter.max_value.value -%}{{ filter.max_value.value | money }}{%- else -%}{{ filter.range_max | money }}{% endif %}
													</a>
												</li>
											{%- endif -%}
										{% endif %}
									{%- endfor -%}

									<li class="active-filter-controls__clear-right">
										<a href="{{ collection.url }}" class="active-filter-controls__clear">
											{{ 'collections.filtering.clear_all' | t }}
										</a>
									</li>
								</ul>
							</div>
						{% endcapture %}
						{%- if active_filters_html contains 'active-filter-controls__tag' -%}
							{{ active_filters_html }}
						{%- endif -%}

						{% if collection.products.size > 0 %}
							<div class="product-list product-grid row grid {% if section.settings.coll_infiniscroll %}use-infinite-scroll{% endif %}"
									 data-normheights=".image" data-normheights-inner="img">
								{% capture product_blocks %}
									{%- for product in collection.products -%}
										{% render 'product-block', product: product, max_cols: section.settings.products_per_row, min_cols: section.settings.mobile_products_per_row %}
									{%- endfor -%}
								{% endcapture %}

								{%- if product_blocks contains 'product-block__weight-value' -%}
									{{ product_blocks | replace: '<div class="product-block__weight"></div>', '<div class="product-block__weight">&nbsp;</div>' }}
								{%- else -%}
									{{ product_blocks }}
								{%- endif -%}

								{%- for i in (1..section.settings.products_per_row) -%}
									<div class="product-block product-block--flex-spacer flex column max-cols-{{ section.settings.products_per_row }} min-cols-{{ section.settings.mobile_products_per_row }}"></div>
								{%- endfor -%}
							</div>
						{% else %}
							<p class="section align-center">{{ 'collections.general.empty' | t }}</p>
						{% endif %}

						{% if paginate.pages > 1 %}
							<div class="collection-pagination {% if settings.prod_thumb_gap == "0" %}gap-top{% endif %}">
								<div>
									<div class="results-count results-count--lower">{{ 'collections.general.results' | t: count: collection.products_count }}</div>
								</div>
								<div>{% render 'pagination', paginate: paginate %}</div>
							</div>
						{% endif %}
					</div>
				</div>
      </div>
    </div>
  {% endpaginate %}
</div>

{% schema %}
{
	"name": "Collection pages",
	"class": "main-collection-section",
	"settings": [{
			"type": "header",
			"content": "Heading"
		},
		{
			"type": "select",
			"id": "header_mode",
			"label": "Layout",
			"options": [{
					"value": "hidden",
					"label": "No heading"
				},
				{
					"value": "",
					"label": "Text over image"
				},
				{
					"value": "coloured-split",
					"label": "Text next to image"
				},
				{
					"value": "text-only",
					"label": "No image"
				}
			],
			"default": "coloured-split"
		},
		{
			"type": "radio",
			"id": "height",
			"label": "Height",
			"default": "natural",
			"options": [{
					"value": "natural",
					"label": "Natural"
				},
				{
					"value": "fixed",
					"label": "Fixed height"
				}
			]
		},
		{
			"type": "range",
			"id": "height_desktop",
			"min": 200,
			"max": 650,
			"step": 50,
			"unit": "px",
			"label": "Desktop fixed height",
			"default": 350
		},
		{
			"type": "range",
			"id": "height_mobile",
			"min": 100,
			"max": 1000,
			"step": 50,
			"unit": "px",
			"label": "Mobile fixed height",
			"default": 250
		},
		{
			"type": "select",
			"id": "image_overlay_style",
			"label": "Image tint",
			"info": "Applies to 'Text over image' layout only.",
			"default": "standard",
			"options": [{
					"label": "None",
					"value": "none"
				},
				{
					"label": "Standard",
					"value": "standard"
				},
				{
					"label": "Vignette",
					"value": "vignette"
				},
				{
					"label": "Text shadow",
					"value": "shadow"
				},
				{
					"label": "Bottom",
					"value": "bottom"
				},
				{
					"label": "Top",
					"value": "top"
				}
			]
		},
		{
			"type": "select",
			"id": "text_alignment",
			"label": "Text alignment",
			"options": [{
					"value": "top left",
					"label": "Top left"
				},
				{
					"value": "top center",
					"label": "Top center"
				},
				{
					"value": "top right",
					"label": "Top right"
				},
				{
					"value": "center left",
					"label": "Middle left"
				},
				{
					"value": "center center",
					"label": "Middle center"
				},
				{
					"value": "center right",
					"label": "Middle right"
				},
				{
					"value": "bottom left",
					"label": "Bottom left"
				},
				{
					"value": "bottom center",
					"label": "Bottom center"
				},
				{
					"value": "bottom right",
					"label": "Bottom right"
				}
			],
			"default": "center center"
		},
		{
			"type": "select",
			"id": "breadcrumb_align",
			"label": "Breadcrumb",
			"default": "above_heading",
			"options": [{
					"value": "none",
					"label": "None"
				},
				{
					"value": "above_heading",
					"label": "Above the heading"
				},
				{
					"value": "below_heading",
					"label": "Below the heading"
				}
			]
		},
		{
			"type": "header",
			"content": "Products"
		},
		{
			"type": "range",
			"id": "pagination_limit_int",
			"min": 12,
			"max": 50,
			"step": 1,
			"label": "Number of products per page",
			"default": 36
		},
		{
			"type": "range",
			"id": "products_per_row",
			"label": "Maximum products per row",
			"min": 2,
			"max": 5,
			"step": 1,
			"default": 4
		},
		{
			"type": "select",
			"id": "mobile_products_per_row",
			"label": "Mobile products per row",
			"options": [
				{
					"value": "1",
					"label": "1"
				},
				{
					"value": "2",
					"label": "2"
				}
			],
			"default": "2"
		},
		{
			"type": "checkbox",
			"id": "coll_infiniscroll",
			"label": "Enable infinite-scroll",
			"info": "Allows the visitor to continue loading more products to the same page without navigating to a new page.",
			"default": false
		},
		{
			"type": "checkbox",
			"id": "grid_show_vendor",
			"label": "Show vendor",
			"default": false
		},
		{
			"type": "header",
			"content": "Filters"
		},
    {
      "type": "paragraph",
      "content": "To create the collection filters, go to your [navigation](\/admin\/menus) page."
    },
		{
			"type": "checkbox",
			"id": "show_filter_counts",
			"label": "Show filter counts",
			"default": false
		},
		{
			"type": "checkbox",
			"id": "ajax_products",
			"label": "Filter and sort collections without reloading the page",
			"default": true,
			"info": "Some apps require this to be disabled"
		},
		{
			"type": "checkbox",
			"id": "collection_filters_sticky",
			"label": "Enable sticky filters",
			"info": "This will turn the sticky navigation off for this page",
			"default": false
		},
		{
			"type": "radio",
			"id": "filter_mode",
			"label": "Filter mode",
			"options": [{
					"value": "none",
					"label": "None"
				},
				{
					"value": "simple",
					"label": "Simple"
				},
				{
					"value": "sidebar",
					"label": "Sidebar"
				}
			],
			"info": "'Simple' is only recommended if you have a small number of filters. Note, it doesn't allow for multiple options within a filter to be selected and it won't show the price range filter.",
			"default": "sidebar"
		},
		{
			"type": "select",
			"id": "collapse_filters_method",
			"label": "Sidebar filter group collapse",
			"default": "none",
			"options": [{
					"value": "none",
					"label": "None"
				},
				{
					"value": "over-6",
					"label": "Over 6 items"
				},
				{
					"value": "over-12",
					"label": "Over 12 items"
				},
				{
					"value": "over-18",
					"label": "Over 18 items"
				},
				{
					"value": "all",
					"label": "All"
				}
			]
		},
		{
			"type": "header",
			"content": "Sorting"
		},
		{
			"type": "checkbox",
			"id": "enable_sorting",
			"label": "Show 'Sort by' dropdown",
			"default": true
		},
		{
			"type": "checkbox",
			"id": "collection_sort_show_featured",
			"label": "Show 'Featured' option in sort by dropdown",
			"default": true
		}
	]
}
{% endschema %}
